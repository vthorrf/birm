kLL <- as.matrix(splines::bs(thetaLL, knots=Data$knots))
if (is.null(irf)) {
IRF     <- plogis( rowSums( kLL * bLL ) )
} else if (irf == "logit") {
IRF     <- plogis( rowSums( kLL * bLL ) )
} else if (irf == "sirm") {
IRF     <- 1 / (1 + exp(rowSums( kLL * bLL )))
} else { stop("Unkown IRF :(") }
} else if (basis == "rademacher") {
nKK <- Data$knots
KK  <- t(matrix(nKK, nrow=length(nKK), ncol=length(thetaLL)))
W   <- rowSums((((thetaLL < KK) * -2) + 1) * bLL)
if (is.null(irf)) {
IRF     <- plogis( W )
} else if (irf == "logit") {
IRF     <- plogis( W )
} else if (irf == "sirm") {
IRF     <- 1 / (1 + exp(W))
} else { stop("Unkown IRF :(") }
} else { stop("Unkown basis :(") }
LL      <- sum( dbinom(Data$X[,3], size=(Data$levels - 1), prob=IRF, log=T) )
### Log-Posterior
LP <- LL + Lpp
### Estimates
yhat <- rbinom(length(IRF), size=(Data$levels - 1), prob=IRF)
### Output
Modelout <- list(LP=LP, Dev=-2*LL, Monitor=LP, yhat=yhat, parm=parm)
return(Modelout)
}
Model <- compiler::cmpfun(Model)
Initial.Values <- GIV(Model, MyData, PGF=T)
is.model(Model, Initial.Values, MyData)
is.bayesian(Model, Initial.Values, MyData)
LP <- Model(parm, Data)
parm.names(length)
length(parm.names)
parm <- PGF(Data)
LP <- Model(parm, Data)
Data$parm.names
LP <- Model(parm[1:length(Data$parm.names)], Data)
LP
optim(rep(.5, length(Data$parm.names)), MAP)
MAP <- function(Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP
}
optim(rep(.5, length(Data$parm.names)), MAP)
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data)
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP
-LP$LP
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
MAP <- function(Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data)
MAP <- function(Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(0, length(Data$parm.names)), MAP, Data=Data)
rm(parm)
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(0, length(Data$parm.names)), MAP, Data=Data)
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(0, length(Data$parm.names)), MAP, Data=Data, Model=Model)
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data, Model=Model)
?optim
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data, Model=Model, method = "BFGS")
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "BFGS")
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "Brent")
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN")
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN")
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", maxit=50000)
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
REPORT=100,))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
REPORT=100))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
REPORT=100))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=100,
tmax=50))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1,
tmax=10))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1,
tmax=10))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=.1,
tmax=10))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "L-BFGS-B")#, control=list(maxit=50000,
#           temp=.1,
#          tmax=10))
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "Nelder-Mead")#, control=list(maxit=50000,
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "BFGS")#, control=list(maxit=50000,
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "BFGS")#, control=list(maxit=50000,
optim(rep(.5, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "CG")#, control=list(maxit=50000,
optim(rep(0, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "CG")#, control=list(maxit=50000,
optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "CG")#, control=list(maxit=50000,
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1000,
tmax=100))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1e-4,
tmax=100))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1e-4,
tmax=100))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1e-4,
tmax=1000))
estimates
estimates$parm[Data$pos.theta]
Data$pos.theta
estimates$par[Data$pos.theta]
plot(estimates$par[Data$pos.theta], rowSums(x))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1e-4,
tmax=1))
estimates$value
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1e-4,
tmax=1))
estimates$value
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1e-4,
tmax=1e-4))
estimates$value
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1e-5,
tmax=1))
estimates$value
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1e-8,
tmax=1))
estimates$value
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=65000,
temp=1e-4,
tmax=1))
estimates$value
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=65000,
temp=1e-4,
tmax=1))
estimates$value
?append
LP <- Model(parm[1:length(Data$parm.names)], Data)
append(LogPost, -LP$LP)
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
append(LogPost, -LP$LP)
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=65000,
temp=1e-4,
tmax=1))
LogPost <- vector('numeric')
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
append(LogPost, -LP$LP)
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=65000,
temp=1e-4,
tmax=1))
estimates$value
LogPost
parm <- rnorm(85)
LP <- Model(parm[1:length(Data$parm.names)], Data)
append(LogPost, -LP$LP)
LP <- Model(parm[1:length(Data$parm.names)], Data)
append(LogPost, -LP$LP)
LogPost
append(LogPost, -LP$LP)
append(LogPost, -LP$LP)
append(LogPost, -LP$LP)
append(LogPost, -LP$LP)
append(LogPost, -LP$LP)
LogPost
LogPost <- 1
append(LogPost, -LP$LP)
append(LogPost, -LP$LP)
LogPost
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
print(-LP$LP)
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=65000,
temp=1e-4,
tmax=1))
estimates$value
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
print(-LP$LP)
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=65000,
temp=1e4,
tmax=1))
estimates$value
plot(estimates$par[Data$pos.theta], rowSums(x))
abil <- birm::simData(20, 1:5)$abil
abil
plot(estimates$par[Data$pos.theta], abil)
abil <- birm::simData(20, 1:5)$abil
abil
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
print(-LP$LP)
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=65000,
temp=1e-4,
tmax=1))
estimates$value
plot(estimates$par[Data$pos.theta], abil)
cor(estimates$par[Data$pos.theta], abil)
cor(rowMeans(x), abil)
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
print(-LP$LP)
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=5000,
temp=1e-4,
tmax=1))
estimates$value
plot(estimates$par[Data$pos.theta], abil)
cor(estimates$par[Data$pos.theta], abil)
cor(rowMeans(x), abil)
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
print(-LP$LP)
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=10000,
temp=1e-4,
tmax=1))
estimates$value
plot(estimates$par[Data$pos.theta], abil)
cor(estimates$par[Data$pos.theta], abil)
cor(rowMeans(x), abil)
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
print(-LP$LP)
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1e-4,
tmax=1))
estimates$value
plot(estimates$par[Data$pos.theta], abil)
cor(estimates$par[Data$pos.theta], abil)
cor(rowMeans(x), abil)
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
print(-LP$LP)
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=50000,
temp=1e-4,
tmax=100))
estimates$value
plot(estimates$par[Data$pos.theta], abil)
cor(estimates$par[Data$pos.theta], abil)
cor(rowMeans(x), abil)
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
print(-LP$LP)
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=65000,
temp=1e-4,
tmax=1))
estimates$value
plot(estimates$par[Data$pos.theta], abil)
cor(estimates$par[Data$pos.theta], abil)
cor(rowMeans(x), abil)
cor(estimates$par[Data$pos.theta], rowMeans(x))
MAP <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
print(-LP$LP)
}
estimates <- optim(rep(1, length(Data$parm.names)), MAP, Data=Data,
Model=Model, method = "SANN", control=list(maxit=65000,
temp=1e-4,
tmax=1))
estimates$value
plot(estimates$par[Data$pos.theta], abil)
cor(estimates$par[Data$pos.theta], abil)
cor(rowMeans(x), abil)
cor(estimates$par[Data$pos.theta], rowMeans(x))
LogPost <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
print(-LP$LP)
}
estimates <- optim(rep(1, length(Data$parm.names)), LogPost, Data=Data,
Model=Model, method = "SANN", control=list(maxit=65000,
temp=1e-4,
tmax=1))
return(Model(estimates$par, Data)))
Model(estimates$par, Data)
estimates$value
plot(estimates$par[Data$pos.theta], abil)
cor(estimates$par[Data$pos.theta], abil)
cor(rowMeans(x), abil)
cor(estimates$par[Data$pos.theta], rowMeans(x))
maxit=65000
temp=1e-4
tmax=1
LogPost <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), LogPost, Data=Data,
Model=Model, method = "SANN", control=list(maxit=maxit,
temp=temp,
tmax=tmax,
trace=1))
Model(estimates$par, Data)
help(Sys.sleep)
print("Initiating MAP estimation with SANN algorithm")
Sys.sleep(2)
LogPost <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), LogPost, Data=Data,
Model=Model, method = "SANN", control=list(maxit=maxit,
temp=temp,
tmax=tmax,
trace=1))
REPORT=1000
print("Initiating MAP estimation with SANN algorithm")
Sys.sleep(2)
LogPost <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), LogPost, Data=Data,
Model=Model, method = "SANN", control=list(maxit=maxit,
temp=temp,
tmax=tmax,
trace=2,
REPORT=REPORT))
temp=1e-2
print("Initiating MAP estimation with SANN algorithm")
Sys.sleep(2)
LogPost <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), LogPost, Data=Data,
Model=Model, method = "SANN", control=list(maxit=maxit,
temp=temp,
tmax=tmax,
trace=2,
REPORT=REPORT))
print("Initiating MAP estimation with SANN algorithm")
Sys.sleep(2)
LogPost <- function(parm, Model, Data) {
LP <- Model(parm[1:length(Data$parm.names)], Data)
-LP$LP
}
estimates <- optim(rep(1, length(Data$parm.names)), LogPost, Data=Data,
Model=Model, method = "SANN", control=list(maxit=maxit,
temp=temp,
tmax=tmax,
trace=2,
REPORT=REPORT))
rm(list=ls())
dev.off()
