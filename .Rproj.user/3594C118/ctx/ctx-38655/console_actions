{
    "type": [
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.1.0 (2021-05-18) -- \"Camp Pontanezen\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "###===--- Pesquisa ETED ---===###",
        "> ",
        "",
        "> ",
        "### Start====",
        "> ",
        "rm(list=ls())",
        "> ",
        "dev.off()",
        "Error in dev.off() : cannot shut down device 1 (the null device)\n",
        "> ",
        "cat(\"\\014\")",
        "\f",
        "> ",
        "",
        "> ",
        "### Packages and Functions====",
        "> ",
        "require(heaven)",
        "Carregando pacotes exigidos: heaven\n",
        "Warning message:\n",
        "In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :",
        "\n ",
        " there is no package called ‘heaven’\n",
        "> ",
        "require(openxlsx)",
        "Carregando pacotes exigidos: openxlsx\n",
        "> ",
        "require(lavaan)",
        "Carregando pacotes exigidos: lavaan\n",
        "This is lavaan 0.6-9\nlavaan is FREE software! Please report any bugs.\n",
        "> ",
        "acc <- function(mod, x, y) {",
        "+ ",
        "   sum(diag(table({predict(mod, x) > 0}*1, y))) / sum(table({predict(mod, x) > 0}*1, y))",
        "+ ",
        "}",
        "> ",
        "write.excel <- function(x,row.names=FALSE,col.names=TRUE,...) {",
        "+ ",
        "   write.table(x,file = paste0(\"clipboard-\", object.size(x)),sep=\"\\t\",row.names=row.names,col.names=col.names,...)",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "### Data====",
        "> ",
        "dataset <- as.data.frame(haven::read_sav(\"BDBiaZ.sav\"))",
        "Error: 'BDBiaZ.sav' does not exist in current working directory ('C:/Users/Avell/Documents/MEGA/Qualification/R packages/birm').\n",
        "> ",
        "DSNames <- openxlsx::read.xlsx(\"EBADEPHOSP v0.xlsx\", sheet=4)[,2]",
        "Error in read.xlsx.default(\"EBADEPHOSP v0.xlsx\", sheet = 4) : \n  File does not exist.\n",
        "> ",
        "colnames(dataset) <- DSNames",
        "Error: object 'DSNames' not found\n",
        "> ",
        "resp_k  <- openxlsx::read.xlsx(\"EBADEPHOSP.xlsx\", sheet=3)",
        "Error in read.xlsx.default(\"EBADEPHOSP.xlsx\", sheet = 3) : \n  File does not exist.\n",
        "> ",
        "",
        "> ",
        "### EBADEP====",
        "> ",
        "EBADEP <- dataset[,grep(\"EBADEP\",colnames(dataset))]",
        "Error: object 'dataset' not found\n",
        "> ",
        "invert <- c(2, 3, 4, 6, 9, 10, 11, 12, 16, 18, 21,",
        "+ ",
        "            27, 28, 32, 38, 42)",
        "> ",
        "code   <- rep(1, ncol(EBADEP))",
        "Error in ncol(EBADEP) : object 'EBADEP' not found\n",
        "> ",
        "code[invert] <- -1",
        "Error in code[invert] <- -1 : object 'code' not found\n",
        "> ",
        "EBADEPp <- psych::reverse.code(code, EBADEP)",
        "Error in psych::reverse.code(code, EBADEP) : object 'EBADEP' not found\n",
        "> ",
        "colnames(EBADEPp) <- colnames(EBADEP)",
        "Error in is.data.frame(x) : object 'EBADEP' not found\n",
        "> ",
        "EBADEPp <- EBADEP[complete.cases(EBADEP),-6]",
        "Error: object 'EBADEP' not found\n",
        "> ",
        "model   <- paste(\"F1\", paste(colnames(EBADEPp), collapse=\" + \"),",
        "+ ",
        "                 sep=\" =~ \")",
        "Error in is.data.frame(x) : object 'EBADEPp' not found\n",
        "> ",
        "fit0    <- lavaan::cfa(model, EBADEPp, estimator=\"WLSMV\",",
        "+ ",
        "                       std.lv=T)",
        "Error in lavaan::lavaan(model = model, data = EBADEPp, estimator = \"WLSMV\",  : \n  object 'EBADEPp' not found\n",
        "> ",
        "summary(fit0, standard=T)",
        "Error in h(simpleError(msg, call)) : \n  erro na avaliação do argumento 'object' na seleção do método para a função 'summary': 'object 'fit0' not found'\n",
        "> ",
        "fitMeasures(fit0, c(\"chisq.scaled\",\"df.scaled\",\"cfi.scaled\",\"tli.scaled\",",
        "+ ",
        "                    \"rmsea.scaled\",\"srmr\",\"ecvi\"))",
        "Error in h(simpleError(msg, call)) : \n  erro na avaliação do argumento 'object' na seleção do método para a função 'fitMeasures': 'object 'fit0' not found'\n",
        "> ",
        "",
        "> ",
        "### Vari?veis crit?rio====",
        "> ",
        "###====================== J? tentou suic?dio?",
        "> ",
        "SS              <- dataset$Dpsi_13",
        "Error: object 'dataset' not found\n",
        "> ",
        "SS[SS == 2] <- 0",
        "Error in SS[SS == 2] <- 0 : object 'SS' not found\n",
        "> ",
        "SS[SS == 1] <- 1",
        "Error in SS[SS == 1] <- 1 : object 'SS' not found\n",
        "> ",
        "SS              <- as.numeric(SS)",
        "Error: object 'SS' not found\n",
        "> ",
        "",
        "> ",
        "###====================== QSG",
        "> ",
        "QSG <- dataset[,grep(\"QSG\",colnames(dataset))]",
        "Error: object 'dataset' not found\n",
        "> ",
        "# Depress?o",
        "> ",
        "QSGD  <- QSG[,c(2,5,6,7,9,10,11)]",
        "Error: object 'QSG' not found\n",
        "> ",
        "# Auto-efic?cia",
        "> ",
        "QSGA <- QSG[,setdiff(1:ncol(QSG),c(2,5,6,7,9,10,11))]",
        "Error: object 'QSG' not found\n",
        "> ",
        "# Escores de Soma",
        "> ",
        "QSGDP <- rowMeans(QSGD)",
        "Error in is.data.frame(x) : object 'QSGD' not found\n",
        "> ",
        "QSGAP <- rowMeans(QSGA)",
        "Error in is.data.frame(x) : object 'QSGA' not found\n",
        "> ",
        "",
        "> ",
        "###====================== EAS - Dimens?es",
        "> ",
        "EAS <- dataset[,grep(\"EAS\",colnames(dataset))]",
        "Error: object 'dataset' not found\n",
        "> ",
        "Psicoticismo <- EAS[,c(4, 8, 12, 20, 27, 32, 36, 38, 39, 40)]",
        "Error: object 'EAS' not found\n",
        "> ",
        "Obsessividade.Compulsividade <- EAS[,c(13, 18, 21, 23, 25, 26,",
        "+ ",
        "                                       28, 30, 34, 35)]",
        "Error: object 'EAS' not found\n",
        "> ",
        "Somatizacao <- EAS[,c(1, 2, 7, 10, 11, 15, 16, 19, 22, 24)]",
        "Error: object 'EAS' not found\n",
        "> ",
        "Ansiedade <- EAS[,c(3, 5, 6, 9, 14, 17, 29, 31, 33, 37)]",
        "Error: object 'EAS' not found\n",
        "> ",
        "# Escores de Soma",
        "> ",
        "EAS.P <- rowMeans(Psicoticismo)",
        "Error in is.data.frame(x) : object 'Psicoticismo' not found\n",
        "> ",
        "EAS.O <- rowMeans(Obsessividade.Compulsividade)",
        "Error in is.data.frame(x) : \n  object 'Obsessividade.Compulsividade' not found\n",
        "> ",
        "EAS.S <- rowMeans(Somatizacao)",
        "Error in is.data.frame(x) : object 'Somatizacao' not found\n",
        "> ",
        "EAS.A <- rowMeans(Ansiedade)",
        "Error in is.data.frame(x) : object 'Ansiedade' not found\n",
        "> ",
        "",
        "> ",
        "###====================== PHQ - Ponto de corte",
        "> ",
        "PHQ <- dataset[,grep(\"PHQ\",colnames(dataset))]",
        "Error: object 'dataset' not found\n",
        "> ",
        "# 0-8: Sem depress?o",
        "> ",
        "# 9 ou maior: depress?o",
        "> ",
        "PHQD <- {rowSums(PHQ) > 8} * 1",
        "Error in is.data.frame(x) : object 'PHQ' not found\n",
        "> ",
        "",
        "> ",
        "###====================== HADS",
        "> ",
        "HADS <- dataset[,grep(\"HADS\",colnames(dataset))]",
        "Error: object 'dataset' not found\n",
        "> ",
        "Dep <- HADS[,c(2, 4, 6, 8, 10, 12, 14)]",
        "Error: object 'HADS' not found\n",
        "> ",
        "# 0-8: Sem depress?o",
        "> ",
        "# 9 ou maior: depress?o",
        "> ",
        "Ans  <- HADS[,setdiff(1:ncol(HADS), c(2, 4, 6, 8, 10, 12, 14))]",
        "Error: object 'HADS' not found\n",
        "> ",
        "# 0-8: Sem ansiedade",
        "> ",
        "# 9 ou maior: ansiedade",
        "> ",
        "DepD <- {rowSums(Dep) > 8} * 1",
        "Error in is.data.frame(x) : object 'Dep' not found\n",
        "> ",
        "AnsD <- {rowSums(Ans) > 8} * 1",
        "Error in is.data.frame(x) : object 'Ans' not found\n",
        "> ",
        "",
        "> ",
        "### Modelos fatoriais====",
        "> ",
        "fatores <- c(\"EBADEP\", \"QSG\", \"PHQ\", \"HADS\")",
        "> ",
        "factors <- c(\"QSG\", \"PHQ\", \"HADS\")",
        "> ",
        "escalas <- list(EBADEPp, QSGD, PHQ, Dep)",
        "Error: object 'EBADEPp' not found\n",
        "> ",
        "escales <- list(QSGD, PHQ, Dep)",
        "Error: object 'QSGD' not found\n",
        "> ",
        "all.scale <- cbind(EBADEPp, QSGD, PHQ, Dep)",
        "Error in cbind(EBADEPp, QSGD, PHQ, Dep) : object 'EBADEPp' not found\n",
        "> ",
        "sec.scale <- cbind(EBADEPp, QSGD, PHQ, Dep)",
        "Error in cbind(EBADEPp, QSGD, PHQ, Dep) : object 'EBADEPp' not found\n",
        "> ",
        "# Unifatorial",
        "> ",
        "mod1 <- paste(",
        "+ ",
        "   \"U =~ \", paste(colnames(all.scale),collapse=\" + \"), sep=\"\"",
        "+ ",
        ")",
        "Error in is.data.frame(x) : object 'all.scale' not found\n",
        "> ",
        "# Bifatorial",
        "> ",
        "mod2 <- paste(c(mod1,",
        "+ ",
        "   paste(sapply(seq_along(fatores), function(g) {",
        "+ ",
        "      paste(fatores[g], paste(colnames(escalas[[g]]),collapse=\" + \"), sep=\" =~ \")",
        "+ ",
        "   }), collapse=\"\\n\")),",
        "+ ",
        "collapse=\"\\n\")",
        "Error in paste(c(mod1, paste(sapply(seq_along(fatores), function(g) { : \n  object 'mod1' not found\n",
        "> ",
        "# Bifatorial sem EBADEP",
        "> ",
        "mod1.1 <- paste(",
        "+ ",
        "   \"U =~ \", paste(colnames(sec.scale),collapse=\" + \"), sep=\"\"",
        "+ ",
        ")",
        "Error in is.data.frame(x) : object 'sec.scale' not found\n",
        "> ",
        "mod2.2 <- paste(c(mod1.1,",
        "+ ",
        "  paste(sapply(seq_along(factors), function(g) {",
        "+ ",
        "     paste(factors[g], paste(colnames(escales[[g]]),collapse=\" + \"), sep=\" =~ \")",
        "+ ",
        "  }), collapse=\"\\n\")),",
        "+ ",
        "collapse=\"\\n\")",
        "Error in paste(c(mod1.1, paste(sapply(seq_along(factors), function(g) { : \n  object 'mod1.1' not found\n",
        "> ",
        "# Multifatorial",
        "> ",
        "mod3 <- paste(sapply(seq_along(fatores), function(g) {",
        "+ ",
        "   paste(fatores[g], paste(colnames(escalas[[g]]),collapse=\" + \"), sep=\" =~ \")",
        "+ ",
        "}), collapse=\"\\n\")",
        "Error in is.data.frame(x) : object 'escalas' not found\n",
        "Called from: is.data.frame(x)\n",
        "Browse[1]> ",
        "mod3.2 <- paste(sapply(seq_along(factors), function(g) {",
        "+ ",
        "   paste(factors[g], paste(colnames(escales[[g]]),collapse=\" + \"), sep=\" =~ \")",
        "+ ",
        "}), collapse=\"\\n\")",
        "Error during wrapup: ",
        "object 'escales' not found\n",
        "Error: no more error handlers available (recursive errors?); invoking 'abort' restart\n",
        "Browse[1]> ",
        "# Ajustes",
        "Browse[1]> ",
        "fit1 <- lavaan::cfa(mod1, data=all.scale, estimator=\"WLSMV\", std.lv=T)",
        "Error during wrapup: ",
        "object 'all.scale' not found\n",
        "Error: no more error handlers available (recursive errors?); invoking 'abort' restart\n",
        "Browse[1]> ",
        "fit2 <- lavaan::cfa(mod2, data=all.scale, estimator=\"WLSMV\", std.lv=T, orthogonal=T)",
        "Error during wrapup: ",
        "object 'all.scale' not found\n",
        "Error: no more error handlers available (recursive errors?); invoking 'abort' restart\n",
        "Browse[1]> ",
        "fit3 <- lavaan::cfa(mod3, data=all.scale, estimator=\"WLSMV\", std.lv=T)",
        "Error during wrapup: ",
        "object 'all.scale' not found\n",
        "Error: no more error handlers available (recursive errors?); invoking 'abort' restart\n",
        "Browse[1]> ",
        "# SEM EBADEP",
        "Browse[1]> ",
        "fit2.2=lavaan::cfa(mod2.2, data=sec.scale, estimator=\"WLSMV\", std.lv=T, orthogonal=T)",
        "Error during wrapup: ",
        "object 'sec.scale' not found\n",
        "Error: no more error handlers available (recursive errors?); invoking 'abort' restart\n",
        "Browse[1]> ",
        "fit3.2=lavaan::cfa(mod3.2, data=sec.scale, estimator=\"WLSMV\", std.lv=T)",
        "Error during wrapup: ",
        "object 'sec.scale' not found\n",
        "Error: no more error handlers available (recursive errors?); invoking 'abort' restart\n",
        "Browse[1]> ",
        "write.excel(rbind(",
        "+ ",
        "   lavaan::fitmeasures(fit1, c(\"chisq.scaled\",\"df.scaled\",\"cfi.scaled\",\"tli.scaled\",",
        "+ ",
        "                               \"rmsea.scaled\",\"srmr\",\"ecvi\")),",
        "+ ",
        "   lavaan::fitmeasures(fit2, c(\"chisq.scaled\",\"df.scaled\",\"cfi.scaled\",\"tli.scaled\",",
        "+ ",
        "                               \"rmsea.scaled\",\"srmr\",\"ecvi\")),",
        "+ ",
        "   lavaan::fitmeasures(fit3, c(\"chisq.scaled\",\"df.scaled\",\"cfi.scaled\",\"tli.scaled\",",
        "+ ",
        "                               \"rmsea.scaled\",\"srmr\",\"ecvi\"))",
        "+ ",
        "))",
        "Error during wrapup: ",
        "erro na avaliação do argumento 'object' na seleção do método para a função 'fitmeasures': 'object 'fit1' not found'\n",
        "Error: no more error handlers available (recursive errors?); invoking 'abort' restart\n",
        "Browse[1]> ",
        "lambda_2 = inspect(fit2, what=\"std.all\")$lambda",
        "Error during wrapup: ",
        "object 'fit2' not found\n",
        "Error: no more error handlers available (recursive errors?); invoking 'abort' restart\n",
        "Browse[1]> ",
        "theta_2  = inspect(fit2, what=\"std.all\")$theta",
        "Error during wrapup: ",
        "object 'fit2' not found\n",
        "Error: no more error handlers available (recursive errors?); invoking 'abort' restart\n",
        "Browse[1]> ",
        "#write.excel(",
        "Browse[1]> ",
        "cbind(lambda_2, (lambda_2[,1]^2)/rowSums(cbind(lambda_2, diag(theta_2))^2))#,",
        "Error during wrapup: ",
        "object 'lambda_2' not found\n",
        "Error: no more error handlers available (recursive errors?); invoking 'abort' restart\n",
        "Browse[1]> ",
        "#            row.names=T)",
        "Browse[1]> ",
        "",
        "> ",
        "### Escores Fatoriais====",
        "> ",
        "## Extract parameters",
        "> ",
        "lambda_0 = inspect(fit0, what=\"std.all\")$lambda",
        "Error in inspect(fit0, what = \"std.all\") : object 'fit0' not found\n",
        "> ",
        "psi_0    = inspect(fit0, what=\"std.all\")$psi",
        "Error in inspect(fit0, what = \"std.all\") : object 'fit0' not found\n",
        "> ",
        "lambda_1 = inspect(fit1, what=\"std.all\")$lambda",
        "Error in inspect(fit1, what = \"std.all\") : object 'fit1' not found\n",
        "> ",
        "psi_1    = inspect(fit1, what=\"std.all\")$psi",
        "Error in inspect(fit1, what = \"std.all\") : object 'fit1' not found\n",
        "> ",
        "lambda_2 = inspect(fit2, what=\"std.all\")$lambda",
        "Error in inspect(fit2, what = \"std.all\") : object 'fit2' not found\n",
        "> ",
        "psi_2    = inspect(fit2, what=\"std.all\")$psi",
        "Error in inspect(fit2, what = \"std.all\") : object 'fit2' not found\n",
        "> ",
        "lambda_3 = inspect(fit3, what=\"std.all\")$lambda",
        "Error in inspect(fit3, what = \"std.all\") : object 'fit3' not found\n",
        "> ",
        "psi_3    = inspect(fit3, what=\"std.all\")$psi",
        "Error in inspect(fit3, what = \"std.all\") : object 'fit3' not found\n",
        "> ",
        "# Sem EBADEP",
        "> ",
        "lambda_2.2 = inspect(fit2.2, what=\"std.all\")$lambda",
        "Error in inspect(fit2.2, what = \"std.all\") : object 'fit2.2' not found\n",
        "> ",
        "psi_2.2    = inspect(fit2.2, what=\"std.all\")$psi",
        "Error in inspect(fit2.2, what = \"std.all\") : object 'fit2.2' not found\n",
        "> ",
        "lambda_3.2 = inspect(fit3.2, what=\"std.all\")$lambda",
        "Error in inspect(fit3.2, what = \"std.all\") : object 'fit3.2' not found\n",
        "> ",
        "psi_3.2    = inspect(fit3.2, what=\"std.all\")$psi",
        "Error in inspect(fit3.2, what = \"std.all\") : object 'fit3.2' not found\n",
        "> ",
        "",
        "> ",
        "## Calculate scores",
        "> ",
        "EF0 <- psych::factor.scores(EBADEPp, lambda_0, psi_0, method = \"tenBerge\")$scores",
        "Error in psych::factor.scores(EBADEPp, lambda_0, psi_0, method = \"tenBerge\") : \n  object 'lambda_0' not found\n",
        "> ",
        "EF1 <- psych::factor.scores(all.scale, lambda_1, psi_1, method = \"tenBerge\")$scores",
        "Error in psych::factor.scores(all.scale, lambda_1, psi_1, method = \"tenBerge\") : \n  object 'lambda_1' not found\n",
        "> ",
        "EF2 <- psych::factor.scores(all.scale, lambda_2, psi_2, method = \"tenBerge\")$scores",
        "Error in psych::factor.scores(all.scale, lambda_2, psi_2, method = \"tenBerge\") : \n  object 'lambda_2' not found\n",
        "> ",
        "EF3 <- psych::factor.scores(all.scale, lambda_3, psi_3, method = \"tenBerge\")$scores",
        "Error in psych::factor.scores(all.scale, lambda_3, psi_3, method = \"tenBerge\") : \n  object 'lambda_3' not found\n",
        "> ",
        "# Sem EBADEP",
        "> ",
        "EF2.2 = psych::factor.scores(sec.scale, lambda_2.2, psi_2.2, method = \"tenBerge\")$scores",
        "Error in psych::factor.scores(sec.scale, lambda_2.2, psi_2.2, method = \"tenBerge\") : \n  object 'lambda_2.2' not found\n",
        "> ",
        "EF3.2 = psych::factor.scores(sec.scale, lambda_3.2, psi_3.2, method = \"tenBerge\")$scores",
        "Error in psych::factor.scores(sec.scale, lambda_3.2, psi_3.2, method = \"tenBerge\") : \n  object 'lambda_3.2' not found\n",
        "> ",
        "",
        "> ",
        "## Compare scores",
        "> ",
        "Final <- data.frame(\"EBADEP_Uni\"=c(EF0), \"All_Uni\"=c(EF1),",
        "+ ",
        "                    \"Multi_EBADEP\"=c(EF3[,1]),",
        "+ ",
        "                    \"Bifactor\"=c(EF2[,1]), \"BiFac_EBADEP\"=c(EF2[,2]),",
        "+ ",
        "                    \"BifactorSE\"=c(EF2.2[,1]))",
        "Error in data.frame(EBADEP_Uni = c(EF0), All_Uni = c(EF1), Multi_EBADEP = c(EF3[,  : \n  object 'EF0' not found\n",
        "> ",
        "#jpeg(\"Figure1.jpeg\", height=20, width=20, units=\"cm\", res=1200, pointsize=17)",
        "> ",
        "psych::pairs.panels(Final, digits=3, hist.col=\"gray\", ci=T)",
        "Error in ncol(x) : object 'Final' not found\n",
        "> ",
        "#dev.off()",
        "> ",
        "",
        "> ",
        "####==== THE END(?) ====####",
        "\nRestarting R session...\n\n"
    ]
}