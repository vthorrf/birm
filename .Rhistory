seq(0,1, len=if(ncol(x) > 10) 10 else ncol(x))
x <- matrix(1, 30 , 10)
seq(0,1, len=if(ncol(x) > 10) 10 else ncol(x))
seq(0,1, len=if(ncol(x) > 10) 10 else ncol(x))
seq(0,1, len=if(ncol(x) > 10) 10 else ncol(x))
seq(0,1, len=if(ncol(x) > 10) 10 else ncol(x))
source("simRasch.R")
source(".\R\simRasch.R")
source("../R/simRasch.R")
source("../R/simRasch.R")
library(birm)
x <- simRasch(100,10,2)$data
x
fit <- rasch(x, method="LA")
fit$abil
x <- simRasch(200,20,2)
fit <- rasch(x$data, method="LA")
plot(fit$abil ~ x$abil)
plot(rowMeans(x$data) ~ x$abil)
plot(fit$abil ~ x$abil)
fit <- rasch(x$data, method="VB")
install.packages("remotes")
remotes::install_github("vthorrf/birm")
require(psych)
data("Holzinger")
str(Holzinger)
str(Holzinger.9)
data("sat.act")
str(sat.act)
data("Tal.Or")
str(Tal.Or)
rm(list=ls())
library(birm)
TTList[,1]
dnorm(0)
dnorm(0, 0, 1)
dnorm(0, 1, 1)
dnorm(0, 2, 1)
dnorm(0, 0, 1)
dnorm(1, 0, 1)
### Simulate SEM data====
pop.model <- ' # modelo de medida
F1 =~ V1 + .5*V2 + .2*V3 + .8*V4 + .5*V5
F2 =~ V6 + .6*V7 + .8*V8 + .7*V9 + .9*V10
F3 =~ V11 + .1*V12 + .9*V13 + .5*V14 + .5*V15
# modelo estrutural
F1 ~ .87*F2 + .31*F3 '
set.seed(1234)
myData <- simulateData(pop.model, sample.nobs=100L)
require(lavaan)
### Simulate SEM data====
pop.model <- ' # modelo de medida
F1 =~ V1 + .5*V2 + .2*V3 + .8*V4 + .5*V5
F2 =~ V6 + .6*V7 + .8*V8 + .7*V9 + .9*V10
F3 =~ V11 + .1*V12 + .9*V13 + .5*V14 + .5*V15
# modelo estrutural
F1 ~ .87*F2 + .31*F3 '
set.seed(1234)
myData <- simulateData(pop.model, sample.nobs=100L)
myData
hist(myData[,1])
hist(myData[,2])
hist(myData[,3])
hist(myData[,4])
hist(myData[,5])
hist(myData[,6])
hist(myData[,7])
hist(myData[,8])
hist(myData[,9])
cor(myData[,9])
cor(myData)
apply(myData, 2, var)
apply(myData, 2, sd)
dbinom(.5)
qbinom(.5)
qbinom(.5, 1)
qbinom(.5, 1, .5)
qbinom(.5, 5, .5)
qbinom(.3, 5, .5)
qbinom(.4, 5, .5)
qbinom(.5, 5, .5)
qbinom(.6, 5, .5)
qbinom(.7, 5, .5)
qbinom(.8, 5, .5)
qbinom(.9, 5, .5)
qbinom(.10, 5, .5)
qbinom(.5, 5, .1)
qbinom(.5, 5, .3)
qbinom(.5, 5, .4)
qbinom(.5, 5, .5)
qbinom(.5, 5, .6)
qbinom(.5, 5, .7)
qbinom(.5, 5, .8)
qbinom(.5, 5, .9)
qbinom(.9, 5, .5)
qbinom(.99, 5, .5)
myDataOrd <- data.frame(sapply(1:ncol(myData), function(g) {
qbinom(.5, 4, pnorm(scale(myData[,g]))) + 1
}))
myDataOrd
cor(myDataOrd)
cor(myData)
rm(list=ls())
dev.off()
library(birm)
library(birm)
data <- simRasch(30,5,2)
data <- data$data
fit <- optscr(data, levels=2)
fit <- optscr(data, levels=2, method="LA")
fit$abil
fit$icc
plot(fit$icc[[1]])
plot(fit$icc[[2]])
plot(fit$icc[[3]])
plot(fit$icc[[4]])
plot(fit$icc[[5]])
plot(fit$icc[[6]])
?optscr
fit <- optscr(data, levels=2, irf="sirm", method="LA")
rm(list=ls())
library(birm)
library(birm)
